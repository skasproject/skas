

{{- if and  .Values.rbac.create (eq (include "sk-auth.tokenNamespace" .) .Release.Namespace) }}
# userdb is in same namespace. Use a simple Role
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "{{ include "sk-auth.roleName" . }}"
  labels:
    {{- include "sk-auth.labels" . | nindent 4 }}
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
rules:
  - apiGroups: ["session.skasproject.io"]
    resources:
      - tokens
      - tokens/status
    verbs: ["*"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "{{ include "sk-auth.roleName" . }}-{{ include "sk-auth.serviceAccountName" . }}"
  labels:
    {{- include "sk-auth.labels" . | nindent 4 }}
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
subjects:
  - kind: ServiceAccount
    name: {{ include "sk-auth.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "{{ include "sk-auth.roleName" . }}"

{{- end }}


