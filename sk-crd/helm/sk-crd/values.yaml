
nameOverride:
fullNameOverride:

# ---------------------------------------------------------------------
# Following will allow renaming of resources. You can safely leave undefined and let default values
#
# Will default to {{ include "sk-crd.fullname" . }}-cert
certificateSecretName:
# Will default to {{ include "sk-crd.fullname" . }}
certificateName:
# The name of the service account to use.If not set and create is true, a name is generated using the fullname template
serviceAccountName:
# Will default to {{ include "sk-crd.fullname" . }}
deploymentName:
# Will default to {{ include "sk-crd.fullname" . }}-config
configName:
# Will default to {{ include "sk-crd.fullname" . }}
serviceName:
# Will default to {{ include "sk-crd.fullname" . }}
ingressName:
# Used when cross-ns. Will default to skas:{{ .Release.Namespace }}-{{ include "sk-crd.fullname" . }}
clusterRoleName:
# Used when same-ns. Will default to {{ include "sk-crd.fullname" . }}
roleName:
# A role to be bound to a user allowed to manage userdb. Will default to {{ include "sk-crd.fullname" . }}-editor
editorRoleName:

# ---------------------------------------------------------------------


replicaCount: 2

image:
  pullSecrets: []
  repository: ghcr.io/skasproject/skas
  # -- Overrides the image tag whose default is the chart appVersion.
  tag:
  pullPolicy: Always

log:
  mode: json
  level: info

probe:
  port: 8181
  scheme: HTTP

metric:
  port: 8080

# -- Additional arguments to be added to the executable's args list
additionalArgs: {}

# -- Annotations to be added to the pod
podAnnotations: {}

# -- Annotations to be added to all other resources
commonAnnotations: {}

server:
  port: 7012
  ssl: true

# -- Security Context for the whole pod
podSecurityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault
  # fsGroup: 2000

extraEnv: {}
# Add here environment variable definitions. May be used to inject secret value in config file
#  - name: MY_SECRET
#    valueFrom:
#      secretKeyRef:
#        name: k8s-secret-name
#        key: theSecret

resources: {}
# If you want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#
#  limits:
#    cpu: 100m
#    memory: 200Mi
#  requests:
#    cpu: 100m
#    memory: 100Mi

# -- Nodeselector for the operator to be installed
nodeSelector: {}

# -- Tolerations for the operator to be installed
tolerations: []

# -- Affinity for the operator to be installed
affinity: {}


serviceAccount:
  # -- Specifies whether the service account should be created
  create: true

rbac:
  # -- Specifies whether ClusterRole and ClusterRoleBinding should be created
  create: true

ingressClass: nginx # Don't change, as only 'nginx' is supported for now.

# The namespace hosting users and groupBindings definition. Default to deployment namespace
userdbNamespace:


# ---------------------------------------------------------------------------------------
# The following are context dependant. Should be defined in a context related values file

# The To access the service from outside k8s cluster
ingress:
  enabled: false
  Host:

clients:
#  - id: "merger"
#    secret: "1234"
# To be fully open (No authentication):
#  - id: "*"
#  - secret: "*"

# Cert-manger cluster issuer
clusterIssuer:
# If not provided and ssl:true, then a certificate must be provided externally as a secret. Here is a sample layout:
#
#      apiVersion: v1
#      kind: Secret
#      metadata:
#        name: {{ include "sk-crd.fullname" . }}-cert
#        namespace: skas-system
#      type: kubernetes.io/tls
#      data:
#        ca.crt: LS0tLS.......
#        tls.crt: LS0tLS.....
#        tls.key: LS0t......
#
# Refer to the documentation for more information about certificate creation





