
nameOverride: ""
fullNameOverride: ""

replicaCount: 1

image:
  pullSecrets: []
  repository: ghcr.io/skasproject/skas
  # -- Overrides the image tag whose default is the chart appVersion.
  tag:
  pullPolicy: Always

crds:
  create: true

log:
  mode: dev
  level: info

# -- Additional arguments to be added to the operator's args list
additionalArgs: {}

# -- Annotations to be added to the pod
podAnnotations: {}

# -- Annotations to be added to all other resources
commonAnnotations: {}

probe:
  port: 8181
  scheme: HTTP

metric:
  port: 8080

server:
  port: 7012
  ssl: true
  # certificateSecretName: ,# Will default to {{ include "sk-crd.fullname" . }}-cert
  # Cert-manger cluster issuer
  clusterIssuer: cluster-issuer1
  # If not provided and ssl:true, then a certificate must be provided externally as a secret. Here is a sample layout:
  #
  #      apiVersion: v1
  #      kind: Secret
  #      metadata:
  #        name: {{ include "sk-crd.fullname" . }}-cert
  #        namespace: skas-system
  #      type: kubernetes.io/tls
  #      data:
  #        ca.crt: LS0tLS.......
  #        tls.crt: LS0tLS.....
  #        tls.key: LS0t......

# -- Security Context for the whole pod
podSecurityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault
  # fsGroup: 2000

resources: {}
# If you want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#
#  limits:
#    cpu: 100m
#    memory: 200Mi
#  requests:
#    cpu: 100m
#    memory: 100Mi

# -- Nodeselector for the operator to be installed
nodeSelector: {}

# -- Tolerations for the operator to be installed
tolerations: []

# -- Affinity for the operator to be installed
affinity: {}


serviceAccount:
  # -- Specifies whether the service account should be created
  create: true
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

rbac:
  # -- Specifies whether ClusterRole and ClusterRoleBinding should be created
  create: true

userdbNamespace: skas-userdb

ingress:
  enabled: true
  class: nginx
  host: sk-crd.ingress.kspray1.project33.scw01


